///**
// * Created by mstallings on 11/10/20.
// */
//
public class LeadConverter2 {
//
//
//
//    public static void MapLeadsToAccount() {
//        List<Lead> leadHolder = [SELECT Id, Company FROM Lead WHERE IsConverted = FALSE AND ConvertedAccountId = NULL];
//        List<Account> accntHolder = [SELECT Id, Name FROM Account];
//
//
////        Map<String, Account> AccountIDMap = new Map<String, Account>();
////        Map<Id, Lead> AccountStringMap = new Map<Id, Lead>(leadHolder);
////        Map<Account, Lead> LeadMapper = new Map<Account, Lead>();
////        Map<Id, Id> AccountID = new Map<Id, Id>();
////
////
////
////
////
////        for (Account accnt : accntHolder) {
////            AccountIDMap.put((String)accnt.Name, accnt);
////        }
////
////        for (Lead leady : leadHolder) {
////            AccountStringMap.put((String)leady.Id, leady);
////        }
//
//
//
////        for (Lead leady : leadHolder) {
////            if (AccountIDMap.containsKey(leady.Company)) {
////                AccountStringMap(leady.Name, )
////            }
////        }
//
//
//
//
//
////        for (Account accnt : accntHolder) {
////            AccountIDMap.put(accnt.Id, accnt);
////        }
//
////        for (Lead lead : leadHolder) {
////            LeadCompanyMap.put(lead.Id, lead);
////        }
//
//
////        Map<String, Lead> AccntIDLeadMap = new Map<String, Lead>();
//        // Map over Leads. Pull off the string Company Name as the Key, map it to the Lead Record as the Value
////        For (Lead ld : leadHolder) {
////            LeadCompanyMap.put(ld.Company, ld);
////        }
//
////        // Map over Accounts. Pull off the string Account/Company Name as the Key, map it to the Company's Unique ID as the Value
////        For (Account accnt: accntHolder) {
////            AccountIDMap.put(accnt.Name, accnt.Id);
////        }
//
//
//
//    }
//
//
//
}
//
